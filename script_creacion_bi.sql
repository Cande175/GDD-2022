USE GD1C2022
GO

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TIEMPO')
CREATE TABLE LOCRO.BI_TIEMPO(
TIEMPO_ID INT IDENTITY PRIMARY KEY,
TIEMPO_ANIO INT not null,
TIEMPO_CUATRIMESTRE INT null,
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_ESCUDERIA')
CREATE TABLE LOCRO.BI_ESCUDERIA(
ESCUDERIA_ID INT PRIMARY KEY,
ESCUDERIA_NOMBRE VARCHAR(255)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_CIRCUITO')
CREATE TABLE LOCRO.BI_CIRCUITO(
CIRCUITO_ID INT PRIMARY KEY,
CIRCUITO_NOMBRE VARCHAR(255)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_CARRERA')
CREATE TABLE LOCRO.BI_CARRERA(
CARRERA_ID INT PRIMARY KEY,
CARRERA_CIRCUITO INT FOREIGN KEY REFERENCES LOCRO.BI_CIRCUITO(CIRCUITO_ID),
CARRERA_FECHA DATE
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_AUTO')
CREATE TABLE LOCRO.BI_AUTO(
AUTO_ID INT PRIMARY KEY,
AUTO_ESCUDERIA INT FOREIGN KEY REFERENCES LOCRO.BI_ESCUDERIA(ESCUDERIA_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_PARADA_BOX')
CREATE TABLE LOCRO.BI_PARADA_BOX(
PARADA_ID INT PRIMARY KEY,
PARADA_AUTO INT FOREIGN KEY REFERENCES LOCRO.BI_AUTO(AUTO_ID),
PARADA_CARRERA INT FOREIGN KEY REFERENCES LOCRO.BI_CARRERA(CARRERA_ID),
PARADA_TIEMPO decimal(18,2)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_PARADAS_ESCUDERIAS_CIRCUITO')
CREATE TABLE LOCRO.BI_PARADAS_ESCUDERIAS_CIRCUITO(
CIRCUITO_ID INT NOT NULL,
ESCUDERIA_ID INT NOT NULL,
PARADA_ID INT NOT NULL,
ANIO INT NOT NULL,
CUATRIMESTRE INT NOT NULL,
PARADA_TIEMPO decimal(18,2),
ESCUDERIA_NOMBRE varchar(255),
CIRCUITO_NOMBRE varchar(255),
PRIMARY KEY(CIRCUITO_ID, ESCUDERIA_ID, PARADA_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TIPO_SECTOR')
CREATE TABLE LOCRO.BI_TIPO_SECTOR(
TIPO_SECTOR_ID INT PRIMARY KEY,
TIPO_SECTOR_DETALLE varchar(255)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_SECTOR')
CREATE TABLE LOCRO.BI_SECTOR(
SECTOR_ID INT PRIMARY KEY,
SECTOR_TIPO INT FOREIGN KEY REFERENCES LOCRO.BI_TIPO_SECTOR(TIPO_SECTOR_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TIPO_INCIDENTE')
CREATE TABLE LOCRO.BI_TIPO_INCIDENTE(
TIPO_INCIDENTE_ID INT PRIMARY KEY,
TIPO_INCIDENTE_DETALLE varchar(255)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_INCIDENTE_CIRCUITO')
CREATE TABLE LOCRO.BI_INCIDENTE_CIRCUITO(
INCIDENTE_ID INT NOT NULL,
INCIDENTE_AUTO INT NOT NULL FOREIGN KEY REFERENCES LOCRO.BI_AUTO(AUTO_ID),
INCIDENTE_CIRCUITO INT NOT NULL FOREIGN KEY REFERENCES LOCRO.BI_CIRCUITO(CIRCUITO_ID),
INCIDENTE_SECTOR INT NOT NULL FOREIGN KEY REFERENCES LOCRO.BI_SECTOR(SECTOR_ID),
INCIDENTE_TIPO INT NOT NULL FOREIGN KEY REFERENCES LOCRO.BI_TIPO_INCIDENTE(TIPO_INCIDENTE_ID),
INCIDENTE_TIPO_DETALLE VARCHAR(255),
INCIDENTE_FECHA DATE,
PRIMARY KEY(INCIDENTE_ID, INCIDENTE_AUTO)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_INCIDENTES_ESCUDERIA_CIRCUITO')
CREATE TABLE LOCRO.BI_INCIDENTES_ESCUDERIA_CIRCUITO(
CIRCUITO_ID INT NOT NULL,
ESCUDERIA_ID INT NOT NULL,
INCIDENTE_ID INT NOT NULL,
TIPO_INCIDENTE_ID INT NOT NULL,
TIPO_SECTOR_ID INT NOT NULL,
CIRCUITO_NOMBRE VARCHAR(255),
ESCUDERIA_NOMBRE VARCHAR(255),
TIPO_INCIDENTE_DESCRIPCION VARCHAR(255),
TIPO_SECTOR_DESCRIPCION VARCHAR(255),
ANIO INT NOT NULL,
INCIDENTES_TOTALES INT NOT NULL,
PRIMARY KEY(CIRCUITO_ID, ESCUDERIA_ID, TIPO_SECTOR_ID, INCIDENTE_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_VUELTA')
CREATE TABLE LOCRO.BI_VUELTA(
VUELTA_ID INT IDENTITY PRIMARY KEY,
VUELTA_NRO nvarchar(255) NOT NULL,
VUELTA_CARRERA INT NOT NULL REFERENCES LOCRO.BI_CARRERA(CARRERA_ID) 
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TELE_AUTO')
CREATE TABLE LOCRO.BI_TELE_AUTO(
TELE_AUTO_ID int PRIMARY KEY,
TELE_AUTO_VUELTA INT NOT NULL REFERENCES LOCRO.BI_VUELTA(VUELTA_ID),
TELE_AUTO_DISTANCIA_VUELTA decimal(18,2) null,
TELE_AUTO_TIEMPO_VUELTA decimal(18,2) null,
TELE_AUTO_VELOCIDAD decimal(18,2) null,
TELE_AUTO_COMBUSTIBLE decimal(18,2) null,
TELE_AUTO_AUTO int not null REFERENCES LOCRO.BI_AUTO(AUTO_ID),
TELE_AUTO_SECTOR INT NOT NULL REFERENCES LOCRO.BI_SECTOR(SECTOR_ID),
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_INFO_VUELTAS')
CREATE TABLE LOCRO.BI_INFO_VUELTAS(
AUTO_ID INT NOT NULL,
ESCUDERIA_ID INT NOT NULL,
CIRCUITO_ID INT NOT NULL,
VUELTA_ID INT NOT NULL,
TIEMPO_VUELTA decimal(18,2),
CONSUMO decimal(18,2),
ANIO INT,
PRIMARY KEY(VUELTA_ID, AUTO_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_VELOCIDADES')
CREATE TABLE LOCRO.BI_VELOCIDADES(
AUTO_ID INT NOT NULL,
ESCUDERIA_ID INT NOT NULL,
CIRCUITO_ID INT NOT NULL,
SECTOR_ID INT NOT NULL,
SECTOR_TIPO INT NOT NULL,
VELOCIDAD decimal(18,2) NOT NULL,
PRIMARY KEY(AUTO_ID, SECTOR_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TIPO_NEUMATICO')
CREATE TABLE LOCRO.BI_TIPO_NEUMATICO(
TIPO_NEUMATICO_ID int PRIMARY KEY,
TIPO_NEUMATICO_DESCRIPCION NVARCHAR(255) null
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_NEUMATICO')
CREATE TABLE LOCRO.BI_NEUMATICO(
NEUMATICO_ID int PRIMARY KEY,
NEUMATICO_NRO_SERIE NVARCHAR(255) not null,
NEUMATICO_TIPO INT not null REFERENCES LOCRO.BI_TIPO_NEUMATICO(TIPO_NEUMATICO_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TELE_NEUMATICO')
CREATE TABLE LOCRO.BI_TELE_NEUMATICO(
TELE_NEUMATICO_ID int PRIMARY KEY,
TELE_NEUMATICO_VUELTA int not null REFERENCES LOCRO.BI_VUELTA(VUELTA_ID),
TELE_NEUMATICO_NEUMATICO INT not null REFERENCES LOCRO.BI_NEUMATICO(NEUMATICO_ID),
TELE_NEUMATICO_TELE_AUTO INT not null REFERENCES LOCRO.BI_TELE_AUTO(TELE_AUTO_ID),
TELE_NEUMATICO_PROFUNDIDAD decimal(18,2) not null,
TELE_NEUMATICO_CIRCUITO int not null REFERENCES LOCRO.BI_CIRCUITO(CIRCUITO_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_CAJA')
CREATE TABLE LOCRO.BI_CAJA(
CAJA_ID int PRIMARY KEY,
CAJA_NRO_SERIE NVARCHAR(255) null,
CAJA_MODELO NVARCHAR(255) null
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TELE_CAJA')
CREATE TABLE LOCRO.BI_TELE_CAJA(
TELE_CAJA_ID int PRIMARY KEY,
TELE_CAJA_CAJA int not null REFERENCES LOCRO.BI_CAJA(CAJA_ID),
TELE_CAJA_DESGASTE decimal(18,2),
TELE_CAJA_TELE_AUTO INT not null REFERENCES LOCRO.BI_TELE_AUTO(TELE_AUTO_ID),
TELE_CAJA_VUELTA int not null REFERENCES LOCRO.BI_VUELTA(VUELTA_ID),
TELE_CAJA_CIRCUITO int not null REFERENCES LOCRO.BI_CIRCUITO(CIRCUITO_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_FRENO')
CREATE TABLE LOCRO.BI_FRENO(
FRENO_ID int PRIMARY KEY,
FRENO_NRO_SERIE NVARCHAR(255) null
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TELE_FRENO')
CREATE TABLE LOCRO.BI_TELE_FRENO(
TELE_FRENO_ID int PRIMARY KEY,
TELE_FRENO_TELE_AUTO INT not null REFERENCES LOCRO.BI_TELE_AUTO(TELE_AUTO_ID),
TELE_FRENO_FRENO INT not null REFERENCES LOCRO.BI_FRENO(FRENO_ID),
TELE_FRENO_GROSOR decimal(18,2),
TELE_FRENO_VUELTA int not null REFERENCES LOCRO.BI_VUELTA(VUELTA_ID),
TELE_FRENO_CIRCUITO int not null REFERENCES LOCRO.BI_CIRCUITO(CIRCUITO_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_MOTOR')
CREATE TABLE LOCRO.BI_MOTOR(
MOTOR_ID int PRIMARY KEY,
MOTOR_NRO_SERIE NVARCHAR(255) null
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_TELE_MOTOR')
CREATE TABLE LOCRO.BI_TELE_MOTOR(
TELE_MOTOR_ID int PRIMARY KEY,
TELE_MOTOR_TELE_AUTO INT not null REFERENCES LOCRO.BI_TELE_AUTO(TELE_AUTO_ID),
TELE_MOTOR_MOTOR int not null REFERENCES LOCRO.BI_MOTOR(MOTOR_ID),
TELE_MOTOR_POTENCIA decimal(18,2) not null,
TELE_MOTOR_VUELTA int not null REFERENCES LOCRO.BI_VUELTA(VUELTA_ID),
TELE_MOTOR_CIRCUITO int not null REFERENCES LOCRO.BI_CIRCUITO(CIRCUITO_ID)
);

IF NOT EXISTS(SELECT [name] FROM sys.tables WHERE [name] = 'BI_DESGASTE')
CREATE TABLE LOCRO.BI_DESGASTE(
DESGASTE_ID int IDENTITY PRIMARY KEY,
AUTO_ID INT not null REFERENCES LOCRO.BI_AUTO(AUTO_ID),
CIRCUITO_ID INT NOT NULL REFERENCES LOCRO.BI_CIRCUITO(CIRCUITO_ID),
MOTOR_ID INT REFERENCES LOCRO.BI_MOTOR(MOTOR_ID),
CAJA_ID INT REFERENCES LOCRO.BI_CAJA(CAJA_ID),
FRENO_ID INT REFERENCES LOCRO.BI_FRENO(FRENO_ID),
NEUMATICO_ID INT REFERENCES LOCRO.BI_NEUMATICO(NEUMATICO_ID),
VUELTA_ID INT NOT NULL REFERENCES LOCRO.BI_VUELTA(VUELTA_ID),
DESGASTE decimal(18,2) NOT NULL
);

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_BI_TIEMPO')
DROP PROCEDURE MIGRAR_BI_TIEMPO
GO
CREATE PROCEDURE MIGRAR_BI_TIEMPO
AS
BEGIN
	PRINT('MIGRANDO TIEMPOS...')
	INSERT INTO LOCRO.BI_TIEMPO
	SELECT DISTINCT YEAR(CARRERA_FECHA), CEILING(CAST(MONTH(CARRERA_FECHA) AS decimal(12,2)) / 4)
	FROM LOCRO.CARRERA
	PRINT('TIEMPOS MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_BI_ESCUDERIA')
DROP PROCEDURE MIGRAR_BI_ESCUDERIA
GO
CREATE PROCEDURE MIGRAR_BI_ESCUDERIA
AS
BEGIN
	PRINT('MIGRANDO ESCUDERIAS...')
	INSERT INTO LOCRO.BI_ESCUDERIA
	SELECT ESCUDERIA_ID, ESCUDERIA_NOMBRE
	FROM LOCRO.ESCUDERIA
	PRINT('ESCUDERIAS MIGRADAS!!')

END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_BI_CIRCUITO')
DROP PROCEDURE MIGRAR_BI_CIRCUITO
GO
CREATE PROCEDURE MIGRAR_BI_CIRCUITO
AS
BEGIN
	PRINT('MIGRANDO CIRCUITO...')
	INSERT INTO LOCRO.BI_CIRCUITO
	SELECT CIRCUITO_CODIGO, CIRCUITO_NOMBRE
	FROM LOCRO.CIRCUITO
	PRINT('CIRCUITOS MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_BI_CARRERA')
DROP PROCEDURE MIGRAR_BI_CARRERA
GO
CREATE PROCEDURE MIGRAR_BI_CARRERA
AS
BEGIN
	PRINT('MIGRANDO CARRERA...')
	INSERT INTO LOCRO.BI_CARRERA
	SELECT CARRERA_CODIGO, CARRERA_CIRCUITO, CARRERA_FECHA
	FROM LOCRO.CARRERA
	PRINT('CARRERAS MIGRADAS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_BI_AUTO')
DROP PROCEDURE MIGRAR_BI_AUTO
GO
CREATE PROCEDURE MIGRAR_BI_AUTO
AS
BEGIN
	PRINT('MIGRANDO AUTOS...')
	INSERT INTO LOCRO.BI_AUTO
	SELECT AUTO_ID, AUTO_ESCUDERIA
	FROM LOCRO.AUTO
	PRINT('AUTOS MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_BI_PARADA_BOX')
DROP PROCEDURE MIGRAR_BI_PARADA_BOX
GO
CREATE PROCEDURE MIGRAR_BI_PARADA_BOX
AS
BEGIN
	PRINT('MIGRANDO PARADAS...')
	INSERT INTO LOCRO.BI_PARADA_BOX
	SELECT PARADA_ID, PARADA_AUTO, PARADA_CARRERA, PARADA_TIEMPO
	FROM LOCRO.PARADA_BOX
	PRINT('PARADAS MIGRADAS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_PARADAS_ESCUDERIAS_CIRCUITO')
DROP PROCEDURE MIGRAR_PARADAS_ESCUDERIAS_CIRCUITO
GO
CREATE PROCEDURE MIGRAR_PARADAS_ESCUDERIAS_CIRCUITO
AS
BEGIN
	PRINT('MIGRANDO HECHOS BOX...')
	INSERT INTO LOCRO.BI_PARADAS_ESCUDERIAS_CIRCUITO
	SELECT CARRERA_CIRCUITO,
	AUTO_ESCUDERIA,
	PARADA_ID,
	TIEMPO_ANIO,
	TIEMPO_CUATRIMESTRE,
	PARADA_TIEMPO,
	e.ESCUDERIA_NOMBRE,
	c.CIRCUITO_NOMBRE
	FROM LOCRO.BI_PARADA_BOX
	JOIN LOCRO.BI_CARRERA ON PARADA_CARRERA = CARRERA_ID
	JOIN LOCRO.BI_CIRCUITO c ON CARRERA_CIRCUITO = c.CIRCUITO_ID
	JOIN LOCRO.BI_AUTO ON PARADA_AUTO = AUTO_ID
	JOIN LOCRO.BI_ESCUDERIA e ON e.ESCUDERIA_ID = AUTO_ESCUDERIA
	JOIN LOCRO.BI_TIEMPO
		ON YEAR(CARRERA_FECHA) = TIEMPO_ANIO AND CEILING(CAST(MONTH(CARRERA_FECHA) AS decimal(3,1))/ 4) = TIEMPO_CUATRIMESTRE
	PRINT('HECHOS BOX MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TIPO_SECTOR')
DROP PROCEDURE MIGRAR_TIPO_SECTOR
GO
CREATE PROCEDURE MIGRAR_TIPO_SECTOR
AS
BEGIN
	PRINT('MIGRANDO TIPOS DE SECTORES...')
	INSERT INTO LOCRO.BI_TIPO_SECTOR
	SELECT TIPO_SECTOR_NUMERO, TIPO_SECTOR_DETALLE
	FROM LOCRO.TIPO_SECTOR
	PRINT('TIPOS DE SECTORES MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_SECTOR')
DROP PROCEDURE MIGRAR_SECTOR
GO
CREATE PROCEDURE MIGRAR_SECTOR
AS
BEGIN
	PRINT('MIGRANDO SECTORES...')
	INSERT INTO LOCRO.BI_SECTOR
	SELECT SECTOR_CODIGO, SECTOR_TIPO
	FROM LOCRO.SECTOR
	PRINT('SECTORES MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TIPO_INCIDENTE')
DROP PROCEDURE MIGRAR_TIPO_INCIDENTE
GO
CREATE PROCEDURE MIGRAR_TIPO_INCIDENTE
AS
BEGIN
	PRINT('MIGRANDO TIPOS DE INCIDENTES...')
	INSERT INTO LOCRO.BI_TIPO_INCIDENTE
	SELECT *
	FROM LOCRO.TIPO_INCIDENTE
	PRINT('TIPOS DE INCIDENTES MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_INCIDENTE_CIRCUITO')
DROP PROCEDURE MIGRAR_INCIDENTE_CIRCUITO
GO
CREATE PROCEDURE MIGRAR_INCIDENTE_CIRCUITO
AS
BEGIN
	PRINT('MIGRANDO INCIDENTES X CIRCUITO...')
	INSERT INTO LOCRO.BI_INCIDENTE_CIRCUITO
	SELECT
	i.INCIDENTE_ID,
	ia.AUTO_ID,
	c.CARRERA_CIRCUITO,
	i.INCIDENTE_SECTOR,
	TIPO_INCIDENTE_ID,
	TIPO_INCIDENTE_DETALLE,
	c.CARRERA_FECHA
	FROM LOCRO.INCIDENTE i
	JOIN LOCRO.BI_CARRERA c ON i.INCIDENTE_CARRERA = c.CARRERA_ID
	JOIN LOCRO.INCIDENTE_AUTO ia ON i.INCIDENTE_ID = ia.INCIDENTE_ID
	JOIN LOCRO.BI_TIPO_INCIDENTE ON TIPO_INCIDENTE_ID = i.INCIDENTE_TIPO
	PRINT('INCIDENTES X CIRCUITO MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_INCIDENTE_ESCUDERIA_CIRCUITO')
DROP PROCEDURE MIGRAR_INCIDENTE_ESCUDERIA_CIRCUITO
GO
CREATE PROCEDURE MIGRAR_INCIDENTE_ESCUDERIA_CIRCUITO
AS
BEGIN
	PRINT('MIGRANDO INCIDENTES X ESCUDERIA X CIRCUITO...')
	INSERT INTO LOCRO.BI_INCIDENTES_ESCUDERIA_CIRCUITO
	SELECT
	INCIDENTE_CIRCUITO,
	AUTO_ESCUDERIA,
	INCIDENTE_ID,
	INCIDENTE_TIPO,
	TIPO_SECTOR_ID,
	CIRCUITO_NOMBRE,
	ESCUDERIA_NOMBRE,
	INCIDENTE_TIPO_DETALLE,
	TIPO_SECTOR_DETALLE,
	YEAR(INCIDENTE_FECHA),
	(SELECT COUNT(*)
	FROM LOCRO.BI_INCIDENTE_CIRCUITO i1
	JOIN LOCRO.BI_AUTO ON AUTO_ID = i1.INCIDENTE_AUTO
	JOIN LOCRO.BI_SECTOR ON SECTOR_ID = i1.INCIDENTE_SECTOR  
	WHERE AUTO_ESCUDERIA = e.ESCUDERIA_ID AND SECTOR_TIPO = ts.TIPO_SECTOR_ID AND YEAR(i1.INCIDENTE_FECHA) = YEAR(i.INCIDENTE_FECHA))
	FROM LOCRO.BI_INCIDENTE_CIRCUITO i
	JOIN LOCRO.BI_AUTO ON AUTO_ID = INCIDENTE_AUTO
	JOIN LOCRO.BI_ESCUDERIA e ON e.ESCUDERIA_ID = AUTO_ESCUDERIA
	JOIN LOCRO.BI_SECTOR ON SECTOR_ID = INCIDENTE_SECTOR
	JOIN LOCRO.BI_TIPO_SECTOR ts ON SECTOR_TIPO = ts.TIPO_SECTOR_ID
	JOIN LOCRO.BI_CIRCUITO c ON i.INCIDENTE_CIRCUITO = c.CIRCUITO_ID
	PRINT('INCIDENTES X ESCUDERIA X CIRCUITO MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_VUELTA')
DROP PROCEDURE MIGRAR_VUELTA
GO
CREATE PROCEDURE MIGRAR_VUELTA
AS
BEGIN
	PRINT('MIGRANDO VUELTAS...')
	INSERT INTO LOCRO.BI_VUELTA
	SELECT DISTINCT TELE_AUTO_NRO_VUELTA, TELE_AUTO_CARRERA
	FROM LOCRO.TELE_AUTO
	PRINT('VUELTAS MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TELE_AUTO')
DROP PROCEDURE MIGRAR_TELE_AUTO
GO
CREATE PROCEDURE MIGRAR_TELE_AUTO
AS
BEGIN
	PRINT('MIGRANDO TELEMETRIAS DE AUTO...')
	INSERT INTO LOCRO.BI_TELE_AUTO
	SELECT
	TELE_AUTO_CODIGO,
	VUELTA_ID,
	TELE_AUTO_DISTANCIA_VUELTA,
	TELE_AUTO_TIEMPO_VUELTA,
	TELE_AUTO_VELOCIDAD,
	TELE_AUTO_COMBUSTIBLE,
	TELE_AUTO_AUTO,
	TELE_AUTO_SECTOR
	FROM LOCRO.TELE_AUTO
	JOIN LOCRO.BI_VUELTA ON VUELTA_NRO = TELE_AUTO_NRO_VUELTA AND VUELTA_CARRERA = TELE_AUTO_CARRERA
	PRINT('TELEMETRIAS DE AUTO MIGRADAS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_VELOCIDADES')
DROP PROCEDURE MIGRAR_VELOCIDADES
GO
CREATE PROCEDURE MIGRAR_VELOCIDADES
AS
BEGIN
	PRINT('MIGRANDO VELOCIDADES...')
	INSERT INTO LOCRO.BI_VELOCIDADES
	SELECT
	TELE_AUTO_AUTO,
	AUTO_ESCUDERIA,
	CARRERA_CIRCUITO,
	TELE_AUTO_SECTOR,
	SECTOR_TIPO,
	MAX(TELE_AUTO_VELOCIDAD)
	FROM LOCRO.BI_TELE_AUTO
	JOIN LOCRO.BI_AUTO ON TELE_AUTO_AUTO = AUTO_ID
	JOIN LOCRO.BI_VUELTA ON VUELTA_ID = TELE_AUTO_VUELTA
	JOIN LOCRO.BI_CARRERA ON VUELTA_CARRERA = CARRERA_ID
	JOIN LOCRO.BI_SECTOR ON SECTOR_ID = TELE_AUTO_SECTOR
	GROUP BY TELE_AUTO_AUTO, AUTO_ESCUDERIA, CARRERA_CIRCUITO, TELE_AUTO_SECTOR, SECTOR_TIPO
	PRINT('VELOCIDADES MIGRADAS!!')
END
GO

IF EXISTS (SELECT name FROM sysobjects WHERE name='CONSUMO_COMBUSTIBLE' AND type in ( N'FN', N'IF', N'TF', N'FS', N'FT' ))
DROP FUNCTION CONSUMO_COMBUSTIBLE
GO
CREATE FUNCTION CONSUMO_COMBUSTIBLE (@auto INT, @carrera INT) RETURNS decimal(18,2)
AS
BEGIN
	DECLARE @consumo decimal(18,2)
	SELECT @consumo = MAX(TELE_AUTO_COMBUSTIBLE) - MIN(TELE_AUTO_COMBUSTIBLE)
	FROM LOCRO.BI_TELE_AUTO t
	JOIN LOCRO.BI_VUELTA v ON v.VUELTA_ID = t.TELE_AUTO_VUELTA
	WHERE TELE_AUTO_AUTO = @auto AND VUELTA_CARRERA = @carrera
	RETURN @consumo
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_INFO_VUELTAS')
DROP PROCEDURE MIGRAR_INFO_VUELTAS
GO
CREATE PROCEDURE MIGRAR_INFO_VUELTAS
AS
BEGIN
	PRINT('MIGRANDO INFO DE VUELTAS...')
	INSERT INTO LOCRO.BI_INFO_VUELTAS
	SELECT
	TELE_AUTO_AUTO,
	AUTO_ESCUDERIA,
	CARRERA_CIRCUITO,
	VUELTA_ID,
	MAX(TELE_AUTO_TIEMPO_VUELTA),
	dbo.CONSUMO_COMBUSTIBLE(TELE_AUTO_AUTO, CARRERA_ID),
	TIEMPO_ANIO
	FROM LOCRO.BI_TELE_AUTO
	JOIN LOCRO.BI_AUTO ON TELE_AUTO_AUTO = AUTO_ID
	JOIN LOCRO.BI_VUELTA ON TELE_AUTO_VUELTA = VUELTA_ID
	JOIN LOCRO.BI_CARRERA ON VUELTA_CARRERA = CARRERA_ID
	JOIN LOCRO.BI_TIEMPO ON YEAR(CARRERA_FECHA) = TIEMPO_ANIO AND CEILING(CAST(MONTH(CARRERA_FECHA) AS decimal(3,1))/ 4) = TIEMPO_CUATRIMESTRE
	GROUP BY TELE_AUTO_AUTO, AUTO_ESCUDERIA, CARRERA_CIRCUITO, VUELTA_ID, TIEMPO_ANIO, CARRERA_ID
	HAVING MAX(TELE_AUTO_TIEMPO_VUELTA) > 0
	PRINT('INFO DE VUELTAS MIGRADA!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TIPO_NEUMATICO')
DROP PROCEDURE MIGRAR_TIPO_NEUMATICO
GO
CREATE PROCEDURE MIGRAR_TIPO_NEUMATICO
AS
BEGIN
	PRINT('MIGRANDO TIPO_NEUMATICO...')
	INSERT INTO LOCRO.BI_TIPO_NEUMATICO
	SELECT TIPO_NEUMATICO_ID, TIPO_NEUMATICO_DESCRIPCION
	FROM LOCRO.TIPO_NEUMATICO
	PRINT('TIPOS DE NEUMATICOS MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_NEUMATICO')
DROP PROCEDURE MIGRAR_NEUMATICO
GO
CREATE PROCEDURE MIGRAR_NEUMATICO
AS
BEGIN
	PRINT('MIGRANDO NEUMATICO...')
	INSERT INTO LOCRO.BI_NEUMATICO
	SELECT NEUMATICO_ID, NEUMATICO_NRO_SERIE, NEUMATICO_TIPO
	FROM LOCRO.NEUMATICO
	PRINT('NEUMATICOS MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TELE_NEUMATICO')
DROP PROCEDURE MIGRAR_TELE_NEUMATICO
GO
CREATE PROCEDURE MIGRAR_TELE_NEUMATICO
AS
BEGIN
	PRINT('MIGRANDO TELE_NEUMATICO...')
	INSERT INTO LOCRO.BI_TELE_NEUMATICO
	SELECT TELE_NEUMATICO_NUMERO, TELE_AUTO_NRO_VUELTA, TELE_NEUMATICO_NEUMATICO, VUELTA_ID, TELE_NEUMATICO_PROFUNDIDAD, SECTOR_CIRCUITO
	FROM LOCRO.TELE_NEUMATICO
	JOIN LOCRO.TELE_AUTO ON TELE_AUTO_CODIGO = TELE_NEUMATICO_TELE_AUTO
	JOIN LOCRO.SECTOR ON TELE_AUTO_SECTOR = SECTOR_CODIGO
	JOIN LOCRO.BI_VUELTA ON VUELTA_NRO = TELE_AUTO_NRO_VUELTA AND VUELTA_CARRERA = TELE_AUTO_CARRERA
	PRINT('TELE_NEUMATICO MIGRADO!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_CAJA')
DROP PROCEDURE MIGRAR_CAJA
GO
CREATE PROCEDURE MIGRAR_CAJA
AS
BEGIN
	PRINT('MIGRANDO CAJA...')
	INSERT INTO LOCRO.BI_CAJA
	SELECT CAJA_ID, CAJA_NRO_SERIE, CAJA_MODELO
	FROM LOCRO.CAJA
	PRINT('CAJAS MIGRADAS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TELE_CAJA')
DROP PROCEDURE MIGRAR_TELE_CAJA
GO
CREATE PROCEDURE MIGRAR_TELE_CAJA
AS
BEGIN
	PRINT('MIGRANDO TELE_CAJA...')
	INSERT INTO LOCRO.BI_TELE_CAJA
	SELECT TELE_CAJA_NUMERO, TELE_CAJA_CAJA, TELE_CAJA_DESGASTE, TELE_CAJA_TELE_AUTO, VUELTA_ID, SECTOR_CIRCUITO
	FROM LOCRO.TELE_CAJA
	JOIN LOCRO.TELE_AUTO ON TELE_AUTO_CODIGO = TELE_CAJA_TELE_AUTO
	JOIN LOCRO.SECTOR ON TELE_AUTO_SECTOR = SECTOR_CODIGO
	JOIN LOCRO.BI_VUELTA ON VUELTA_NRO = TELE_AUTO_NRO_VUELTA AND VUELTA_CARRERA = TELE_AUTO_CARRERA
	PRINT('TELE_CAJA MIGRADA!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_FRENO')
DROP PROCEDURE MIGRAR_FRENO
GO
CREATE PROCEDURE MIGRAR_FRENO
AS
BEGIN
	PRINT('MIGRANDO FRENOS...')
	INSERT INTO LOCRO.BI_FRENO
	SELECT FRENO_ID, FRENO_NRO_SERIE
	FROM LOCRO.FRENO
	PRINT('FRENOS MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TELE_FRENO')
DROP PROCEDURE MIGRAR_TELE_FRENO
GO
CREATE PROCEDURE MIGRAR_TELE_FRENO
AS
BEGIN
	PRINT('MIGRANDO TELE_FRENO...')
	INSERT INTO LOCRO.BI_TELE_FRENO
	SELECT TELE_FRENO_NUMERO, TELE_FRENO_TELE_AUTO, TELE_FRENO_FRENO, TELE_FRENO_GROSOR, VUELTA_ID, SECTOR_CIRCUITO
	FROM LOCRO.TELE_FRENO
	JOIN LOCRO.TELE_AUTO ON TELE_AUTO_CODIGO = TELE_FRENO_TELE_AUTO
	JOIN LOCRO.SECTOR ON TELE_AUTO_SECTOR = SECTOR_CODIGO
	JOIN LOCRO.BI_VUELTA ON VUELTA_NRO = TELE_AUTO_NRO_VUELTA AND VUELTA_CARRERA = TELE_AUTO_CARRERA
	PRINT('TELE_FRENO MIGRADA!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_MOTOR')
DROP PROCEDURE MIGRAR_MOTOR
GO
CREATE PROCEDURE MIGRAR_MOTOR
AS
BEGIN
	PRINT('MIGRANDO MOTOR...')
	INSERT INTO LOCRO.BI_MOTOR
	SELECT MOTOR_ID, MOTOR_NRO_SERIE
	FROM LOCRO.MOTOR
	PRINT('MOTORES MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_TELE_MOTOR')
DROP PROCEDURE MIGRAR_TELE_MOTOR
GO
CREATE PROCEDURE MIGRAR_TELE_MOTOR
AS
BEGIN
	PRINT('MIGRANDO TELE_MOTOR...')
	INSERT INTO LOCRO.BI_TELE_MOTOR
	SELECT TELE_MOTOR_NUMERO, TELE_MOTOR_TELE_AUTO, TELE_MOTOR_MOTOR, TELE_MOTOR_POTENCIA, VUELTA_ID, SECTOR_CIRCUITO
	FROM LOCRO.TELE_MOTOR
	JOIN LOCRO.TELE_AUTO ON TELE_AUTO_CODIGO = TELE_MOTOR_TELE_AUTO
	JOIN LOCRO.SECTOR ON TELE_AUTO_SECTOR = SECTOR_CODIGO
	JOIN LOCRO.BI_VUELTA ON VUELTA_NRO = TELE_AUTO_NRO_VUELTA AND VUELTA_CARRERA = TELE_AUTO_CARRERA
	PRINT('TELE_MOTOR MIGRADA!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRAR_DESGASTES')
DROP PROCEDURE MIGRAR_DESGASTES
GO
CREATE PROCEDURE MIGRAR_DESGASTES
AS
BEGIN
	PRINT('MIGRANDO DESGASTES...')
	INSERT INTO LOCRO.BI_DESGASTE(AUTO_ID, CIRCUITO_ID, MOTOR_ID, CAJA_ID, FRENO_ID, NEUMATICO_ID, VUELTA_ID, DESGASTE)
	SELECT TELE_AUTO_AUTO, TELE_MOTOR_CIRCUITO, TELE_MOTOR_MOTOR, NULL, NULL, NULL, TELE_MOTOR_VUELTA, MAX(TELE_MOTOR_POTENCIA) - MIN(TELE_MOTOR_POTENCIA)
	FROM LOCRO.BI_TELE_MOTOR
	JOIN LOCRO.BI_TELE_AUTO ON TELE_AUTO_ID = TELE_MOTOR_TELE_AUTO
	GROUP BY TELE_AUTO_AUTO, TELE_MOTOR_CIRCUITO, TELE_MOTOR_VUELTA, TELE_MOTOR_MOTOR
	UNION	
	SELECT TELE_AUTO_AUTO, TELE_CAJA_CIRCUITO, NULL, TELE_CAJA_CAJA, NULL, NULL, TELE_CAJA_VUELTA, MAX(TELE_CAJA_DESGASTE) - MIN(TELE_CAJA_DESGASTE)
	FROM LOCRO.BI_TELE_CAJA
	JOIN LOCRO.BI_TELE_AUTO ON TELE_AUTO_ID = TELE_CAJA_TELE_AUTO
	GROUP BY TELE_AUTO_AUTO, TELE_CAJA_CIRCUITO, TELE_CAJA_VUELTA, TELE_CAJA_CAJA
	UNION
	SELECT TELE_AUTO_AUTO, TELE_FRENO_CIRCUITO, NULL, NULL, TELE_FRENO_FRENO, NULL, TELE_FRENO_VUELTA, MAX(TELE_FRENO_GROSOR) - MIN(TELE_FRENO_GROSOR)
	FROM LOCRO.BI_TELE_FRENO
	JOIN LOCRO.BI_TELE_AUTO ON TELE_AUTO_ID = TELE_FRENO_TELE_AUTO
	GROUP BY TELE_FRENO_FRENO, TELE_FRENO_VUELTA, TELE_AUTO_AUTO, TELE_FRENO_CIRCUITO
	UNION
	SELECT TELE_AUTO_AUTO, TELE_NEUMATICO_CIRCUITO, NULL, NULL, NULL, TELE_NEUMATICO_NEUMATICO, TELE_NEUMATICO_VUELTA, MAX(TELE_NEUMATICO_PROFUNDIDAD) - MIN(TELE_NEUMATICO_PROFUNDIDAD)
	FROM LOCRO.BI_TELE_NEUMATICO
	JOIN LOCRO.BI_TELE_AUTO ON TELE_AUTO_ID = TELE_NEUMATICO_TELE_AUTO
	GROUP BY TELE_NEUMATICO_NEUMATICO, TELE_NEUMATICO_VUELTA, TELE_AUTO_AUTO, TELE_NEUMATICO_CIRCUITO
	PRINT('DESGASTES MIGRADOS!!')
END
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'CIRCUITOS_MAS_TIEMPO_CONSUMIDO')
DROP VIEW CIRCUITOS_MAS_TIEMPO_CONSUMIDO
GO
CREATE VIEW CIRCUITOS_MAS_TIEMPO_CONSUMIDO
AS
	SELECT TOP 3
	CIRCUITO_ID AS 'CODIGO',
	CIRCUITO_NOMBRE AS 'NOMBRE',
	ISNULL(SUM(PARADA_TIEMPO), 0) AS 'TIEMPO TOTAL'
	FROM LOCRO.BI_PARADAS_ESCUDERIAS_CIRCUITO
	GROUP BY CIRCUITO_ID, CIRCUITO_NOMBRE
	ORDER BY 3 DESC
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'CANTIDAD_PARADAS')
DROP VIEW CANTIDAD_PARADAS
GO
CREATE VIEW CANTIDAD_PARADAS
AS
	SELECT
	CIRCUITO_ID AS 'COD.CIRCUITO',
	CIRCUITO_NOMBRE AS 'NOMBRE.CIRCUITO',
	ESCUDERIA_ID AS 'COD.ESCUDERIA',
	ESCUDERIA_NOMBRE AS 'NOMBRE.ESCUDERIA',
	ANIO AS 'ANIO',
	COUNT(*) AS 'CANT.PARADAS'
	FROM LOCRO.BI_PARADAS_ESCUDERIAS_CIRCUITO
	GROUP BY CIRCUITO_ID, CIRCUITO_NOMBRE, ESCUDERIA_ID, ESCUDERIA_NOMBRE, ANIO
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'PROMEDIO_POR_CUATRIMESTRE')
DROP VIEW PROMEDIO_POR_CUATRIMESTRE
GO
CREATE VIEW PROMEDIO_POR_CUATRIMESTRE
AS
	SELECT
	ESCUDERIA_ID AS 'COD.ESCUDERIA',
	ESCUDERIA_NOMBRE AS 'NOMBRE.ESCUDERIA',
	ANIO AS 'ANIO',
	CUATRIMESTRE AS 'CUATRIMESTRE',
	AVG(PARADA_TIEMPO) AS 'PROMEDIO'
	FROM LOCRO.BI_PARADAS_ESCUDERIAS_CIRCUITO
	GROUP BY ESCUDERIA_ID, ESCUDERIA_NOMBRE, ANIO, CUATRIMESTRE
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'PROMEDIO_INCIDENTES')
DROP VIEW PROMEDIO_INCIDENTES
GO
CREATE VIEW PROMEDIO_INCIDENTES
AS
	SELECT
	ESCUDERIA_ID AS 'COD.ESCUDERIA',
	ESCUDERIA_NOMBRE AS 'NOM.ESCUDERIA',
	TIPO_SECTOR_ID AS 'COD.TIP.SECTOR',
	TIPO_SECTOR_DESCRIPCION AS 'NOM.TIP.SECTOR',
	AVG(INCIDENTES_TOTALES) AS 'PROMEDIO INCIDENTES X AÑO'
	FROM LOCRO.BI_INCIDENTES_ESCUDERIA_CIRCUITO
	GROUP BY ESCUDERIA_ID, ESCUDERIA_NOMBRE, TIPO_SECTOR_ID, TIPO_SECTOR_DESCRIPCION
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'CIRCUITOS_MAS_PELIGROSOS')
DROP VIEW CIRCUITOS_MAS_PELIGROSOS
GO
CREATE VIEW CIRCUITOS_MAS_PELIGROSOS
AS
SELECT
CIRCUITO_ID AS 'CODIGO CIRCUITO',
CIRCUITO_NOMBRE AS 'NOMBRE CIRCUITO',
COUNT(*) AS 'CANT INCIDENTES',
ANIO AS 'AÑO'
FROM LOCRO.BI_INCIDENTES_ESCUDERIA_CIRCUITO i1
WHERE CIRCUITO_ID IN (SELECT TOP 3
	CIRCUITO_ID
	FROM LOCRO.BI_INCIDENTES_ESCUDERIA_CIRCUITO i2
	WHERE i2.ANIO = i1.ANIO
	GROUP BY CIRCUITO_ID, ANIO
	ORDER BY COUNT(*))
GROUP BY CIRCUITO_ID, CIRCUITO_NOMBRE, ANIO
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'CIRCUITOS_MAYOR_CONSUMO')
DROP VIEW CIRCUITOS_MAYOR_CONSUMO
GO
CREATE VIEW CIRCUITOS_MAYOR_CONSUMO
AS
SELECT
CIRCUITO_ID AS 'COD. CIRCUITO',
(SELECT c.CIRCUITO_NOMBRE FROM LOCRO.BI_CIRCUITO c WHERE c.CIRCUITO_ID = t.CIRCUITO_ID) AS 'NOM. CIRCUITO',
AVG(CONSUMO) AS 'CONSUMO PROMEDIO'
FROM LOCRO.BI_INFO_VUELTAS t
GROUP BY CIRCUITO_ID
HAVING CIRCUITO_ID IN (	SELECT TOP 3 CIRCUITO_ID
						FROM LOCRO.BI_INFO_VUELTAS
						GROUP BY CIRCUITO_ID
						ORDER BY AVG(CONSUMO) DESC)
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'MAXIMA_VELOCIDAD_AUTO')
DROP VIEW MAXIMA_VELOCIDAD_AUTO
GO
CREATE VIEW MAXIMA_VELOCIDAD_AUTO
AS
SELECT
AUTO_ID AS 'AUTO',
MAX(VELOCIDAD) AS 'VELOCIDAD MAXIMA',
v.SECTOR_TIPO AS 'COD. TIPO SECTOR',
TIPO_SECTOR_DETALLE AS 'TIPO SECTOR',
v.CIRCUITO_ID AS 'COD. CIRCUITO',
CIRCUITO_NOMBRE AS 'NOMBRE CIRCUITO'
FROM LOCRO.BI_VELOCIDADES v
JOIN LOCRO.BI_CIRCUITO c ON c.CIRCUITO_ID = v.CIRCUITO_ID
JOIN LOCRO.BI_TIPO_SECTOR ts ON ts.TIPO_SECTOR_ID = v.SECTOR_TIPO
GROUP BY AUTO_ID, v.SECTOR_TIPO, v.CIRCUITO_ID, TIPO_SECTOR_DETALLE, CIRCUITO_NOMBRE
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'MEJOR_TIEMPO_DE_VUELTA')
DROP VIEW MEJOR_TIEMPO_DE_VUELTA
GO
CREATE VIEW MEJOR_TIEMPO_DE_VUELTA
AS
SELECT 
e.ESCUDERIA_ID AS 'COD. ESCUDERIA',
e.ESCUDERIA_NOMBRE AS 'NOM. ESCUDERIA',
c.CIRCUITO_ID AS 'COD. CIRCUITO',
c.CIRCUITO_NOMBRE AS 'NOM. CIRCUITO',
MIN(TIEMPO_VUELTA) AS 'MEJOR TIEMPO DE VUELTA',
ANIO AS 'AÑO'
FROM LOCRO.BI_INFO_VUELTAS t1
JOIN LOCRO.BI_ESCUDERIA e ON e.ESCUDERIA_ID = t1.ESCUDERIA_ID
JOIN LOCRO.BI_CIRCUITO c ON c.CIRCUITO_ID = t1.CIRCUITO_ID
GROUP BY e.ESCUDERIA_ID, e.ESCUDERIA_NOMBRE, c.CIRCUITO_ID, c.CIRCUITO_NOMBRE, ANIO
GO

IF EXISTS(SELECT [name] FROM sys.views WHERE [name] = 'DESGASTE_PROMEDIO')
DROP VIEW DESGASTE_PROMEDIO
GO
CREATE VIEW DESGASTE_PROMEDIO
AS
SELECT
MOTOR_NRO_SERIE AS 'MOTOR',
NEUMATICO_NRO_SERIE AS 'NEUMATICO',
FRENO_NRO_SERIE AS 'FRENO',
CAJA_NRO_SERIE AS 'CAJA',
AVG(DESGASTE) AS 'DESGASTE PROMEDIO',
VUELTA_NRO AS 'NRO VUELTA',
VUELTA_CARRERA AS 'CARRERA',
d.CIRCUITO_ID AS 'COD. CIRCUITO',
CIRCUITO_NOMBRE AS 'NOM. CIRCUITO',
AUTO_ID AS 'COD. AUTO'
FROM LOCRO.BI_DESGASTE d
JOIN LOCRO.BI_VUELTA v ON v.VUELTA_ID = d.VUELTA_ID
JOIN LOCRO.BI_CIRCUITO circ ON circ.CIRCUITO_ID = d.CIRCUITO_ID
LEFT JOIN LOCRO.BI_MOTOR m ON m.MOTOR_ID = d.MOTOR_ID
LEFT JOIN LOCRO.BI_NEUMATICO n ON n.NEUMATICO_ID = d.NEUMATICO_ID
LEFT JOIN LOCRO.BI_CAJA c ON c.CAJA_ID = d.CAJA_ID
LEFT JOIN LOCRO.BI_FRENO f ON f.FRENO_ID = d.FRENO_ID
GROUP BY NEUMATICO_NRO_SERIE, FRENO_NRO_SERIE, CAJA_NRO_SERIE, MOTOR_NRO_SERIE, VUELTA_CARRERA, VUELTA_NRO, circ.CIRCUITO_NOMBRE, d.CIRCUITO_ID, AUTO_ID
GO

EXEC dbo.MIGRAR_BI_TIEMPO
EXEC dbo.MIGRAR_BI_ESCUDERIA
EXEC dbo.MIGRAR_BI_CIRCUITO
EXEC dbo.MIGRAR_BI_CARRERA
EXEC dbo.MIGRAR_BI_AUTO
EXEC dbo.MIGRAR_BI_PARADA_BOX
EXEC dbo.MIGRAR_PARADAS_ESCUDERIAS_CIRCUITO
EXEC dbo.MIGRAR_TIPO_SECTOR
EXEC dbo.MIGRAR_SECTOR
EXEC dbo.MIGRAR_TIPO_INCIDENTE
EXEC dbo.MIGRAR_INCIDENTE_CIRCUITO
EXEC dbo.MIGRAR_INCIDENTE_ESCUDERIA_CIRCUITO
EXEC dbo.MIGRAR_VUELTA
EXEC dbo.MIGRAR_TELE_AUTO
EXEC dbo.MIGRAR_INFO_VUELTAS
EXEC dbo.MIGRAR_VELOCIDADES
EXEC dbO.MIGRAR_TIPO_NEUMATICO
EXEC dbO.MIGRAR_NEUMATICO
EXEC dbO.MIGRAR_TELE_NEUMATICO
EXEC dbO.MIGRAR_CAJA
EXEC dbO.MIGRAR_TELE_CAJA
EXEC dbO.MIGRAR_FRENO
EXEC dbO.MIGRAR_TELE_FRENO
EXEC dbO.MIGRAR_MOTOR
EXEC dbO.MIGRAR_TELE_MOTOR
EXEC dbo.MIGRAR_DESGASTES

/*--------------- SELECTS -------------------

SELECT * FROM LOCRO.BI_TIEMPO
SELECT * FROM LOCRO.BI_ESCUDERIA
SELECT * FROM LOCRO.BI_CIRCUITO
SELECT * FROM LOCRO.BI_CARRERA
SELECT * FROM LOCRO.BI_AUTO
SELECT * FROM LOCRO.BI_PARADA_BOX
SELECT * FROM LOCRO.BI_PARADAS_ESCUDERIAS_CIRCUITO
SELECT * FROM LOCRO.BI_TIPO_SECTOR
SELECT * FROM LOCRO.BI_SECTOR
SELECT * FROM LOCRO.BI_TIPO_INCIDENTE
SELECT * FROM LOCRO.BI_INCIDENTE_CIRCUITO
SELECT * FROM LOCRO.BI_INCIDENTES_ESCUDERIA_CIRCUITO
SELECT * FROM LOCRO.BI_VUELTA
SELECT * FROM LOCRO.BI_TELE_AUTO
SELECT * FROM LOCRO.BI_INFO_VUELTAS
----------------- VIEWS -----------------

SELECT * FROM CIRCUITOS_MAS_TIEMPO_CONSUMIDO
SELECT * FROM CANTIDAD_PARADAS
SELECT * FROM PROMEDIO_POR_CUATRIMESTRE
SELECT * FROM PROMEDIO_INCIDENTES
SELECT * FROM CIRCUITOS_MAS_PELIGROSOS
SELECT * FROM CIRCUITOS_MAYOR_CONSUMO
SELECT * FROM MAXIMA_VELOCIDAD_AUTO
SELECT * FROM MEJOR_TIEMPO_DE_VUELTA
SELECT * FROM DESGASTE_PROMEDIO

---------------- DROPEAR TABLAS ------------------

DROP TABLE LOCRO.BI_DESGASTE
DROP TABLE LOCRO.BI_TELE_NEUMATICO
DROP TABLE LOCRO.BI_TIPO_NEUMATICO
DROP TABLE LOCRO.BI_NEUMATICO
DROP TABLE LOCRO.BI_TELE_FRENO
DROP TABLE LOCRO.BI_FRENO
DROP TABLE LOCRO.BI_TELE_CAJA
DROP TABLE LOCRO.BI_CAJA
DROP TABLE LOCRO.BI_TELE_MOTOR
DROP TABLE LOCRO.BI_MOTOR
DROP TABLE LOCRO.BI_CARRERA
DROP TABLE LOCRO.BI_AUTO
DROP TABLE LOCRO.BI_PARADA_BOX
DROP TABLE LOCRO.BI_ESCUDERIA
DROP TABLE LOCRO.BI_CIRCUITO
DROP TABLE LOCRO.BI_TIEMPO
DROP table LOCRO.BI_PARADAS_ESCUDERIAS_CIRCUITO
DROP TABLE LOCRO.BI_TIPO_SECTOR
DROP TABLE LOCRO.BI_SECTOR
DROP TABLE LOCRO.BI_TIPO_INCIDENTE
DROP TABLE LOCRO.BI_INCIDENTE_CIRCUITO
DROP TABLE LOCRO.BI_INCIDENTES_ESCUDERIA_CIRCUITO
DROP TABLE LOCRO.BI_VUELTA
DROP TABLE LOCRO.BI_TELE_AUTO
DROP TABLE LOCRO.BI_INFO_VUELTAS
DROP TABLE LOCRO.BI_VELOCIDADES


*/
